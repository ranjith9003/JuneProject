<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-OU80H79" failures="1" tests="7" name="com.app.test.Failed_Test2" time="0.041" errors="0" timestamp="13 Aug 2023 04:51:56 GMT" skipped="5">
  <testcase classname="com.app.test.Failed_Test2" name="test1" time="0.003">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="com.app.test.Failed_Test2" name="test1" time="0.003">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="com.app.test.Failed_Test2" name="test1" time="0.002">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="com.app.test.Failed_Test2" name="test1" time="0.003">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="com.app.test.Failed_Test2" name="test1" time="0.004">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at com.app.test.Failed_Test2.test1(Failed_Test2.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:1014)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1215)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- test1 -->
  <testcase classname="com.app.test.Failed_Test2" name="test2" time="0.002"/>
  <testcase classname="com.app.test.Failed_Test2" name="test1" time="0.024">
    <skipped/>
  </testcase> <!-- test1 -->
</testsuite> <!-- com.app.test.Failed_Test2 -->
